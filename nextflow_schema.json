{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/mhcquant/master/nextflow_schema.json",
    "title": "nf-core/mhcquant pipeline parameters",
    "description": "Identify and quantify peptides from mass spectrometry raw data",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "description": "Input raw / mzML files listed in a tsv file (see help for details)",
                    "help_text": "Use this to specify a sample sheet table including your input raw or mzml files as well as their meta information such as SampleID and Condition. For example:\n\n| ID   | Sample      | Condition  |   ReplicateFileName                       |\n| -----|:------------:| ----------:|------------------------------------------:|\n| 1    | MM15_Melanom |      A     |   data/MM15_Melanom_W_1_A_standard.raw    |\n| 2    | MM15_Melanom |      B     |   data/MM15_Melanom_W_1_B_standard.raw    |\n| 3    | MM17_Melanom |      B     |   data/MM17_Melanom_W_1_B_standard.raw    |\n\n```bash\n--input 'path/samples.tsv'\n```",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.tsv$",
                    "fa_icon": "fas fa-file"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "database_options": {
            "title": "Database Options",
            "type": "object",
            "fa_icon": "fas fa-database",
            "description": "Decoy Database generation settings",
            "required": ["fasta"],
            "properties": {
                "fasta": {
                    "type": "string",
                    "fa_icon": "fas fa-file",
                    "pattern": ".fasta$",
                    "description": "Input FASTA protein database",
                    "help_text": "Path to the protein database file"
                },
                "skip_decoy_generation": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Add this parameter when you want to skip the generation of the decoy database.",
                    "help_text": "If you want to use your own decoys, you can specify a dataset that includes decoy sequences. However, each database entry should keep the prefix 'DECOY_'."
                }
            }
        },
        "preprocessing": {
            "title": "Spectrum preprocessing",
            "type": "object",
            "fa_icon": "fas fa-arrows-to-circle",
            "description": "Define pre-search settings",
            "default": "",
            "properties": {
                "run_centroidisation": {
                    "type": "boolean",
                    "fa_icon": "fas fa-border-center-v",
                    "default": false,
                    "description": "Include the flag when the specified ms level is not centroided (default=false). "
                },
                "pick_ms_levels": {
                    "type": "integer",
                    "fa_icon": "fas fa-layer-group",
                    "default": 2,
                    "description": "Specify the MS levels for which the peak picking is applied (unless you use `--run_centroidisation`)."
                },
                "filter_mzml": {
                    "type": "boolean",
                    "default": false,
                    "fa_icon": "fas fa-filter",
                    "description": "Clean up spectrum files and remove artificial charge 0 peptides."
                }
            }
        },
        "search_settings": {
            "title": "Database Search Settings",
            "type": "object",
            "fa_icon": "fas fa-magnifying-glass",
            "description": "",
            "default": "",
            "properties": {
                "instrument": {
                    "type": "string",
                    "default": "high_res",
                    "enum": ["high_res", "low_res"],
                    "hidden": true,
                    "fa_icon": "fas fa-wrench",
                    "description": "Comets theoretical_fragment_ions parameter: theoretical fragment ion peak representation, high_res: sum of intensities plus flanking bins, ion trap (low_res) ms/ms: sum of intensities of central M bin only"
                },
                "enzyme": {
                    "type": "string",
                    "fa_icon": "fas fa-scissors",
                    "default": "unspecific cleavage",
                    "enum": [
                        "unspecific cleavage",
                        "no cleavage",
                        "Arg-C/P",
                        "Asp-N",
                        "Lys-C",
                        "Lys-N",
                        "Chymotrypsin",
                        "CNBr",
                        "Trypsin",
                        "Arg-C",
                        "PepsinA",
                        "Trypsin/P",
                        "glutamyl endopeptidase"
                    ],
                    "description": "Specify which enzymatic restriction should be applied",
                    "hidden": true,
                    "help_text": "For HLA peptides rarely other enzymes are used, however most enzymes such as for example 'Trypsin' are available."
                },
                "activation_method": {
                    "type": "string",
                    "fa_icon": "fas fa-star-shooting",
                    "default": "ALL",
                    "enum": ["ALL", "CID", "ECD", "ETD", "PQD", "HCD", "IRMPD"],
                    "description": "Specify which fragmentation method was used in the MS acquisition",
                    "help_text": "If not specified, `ALL` tries to infer the fragmentation method based on the spectrum file"
                },
                "digest_mass_range": {
                    "type": "string",
                    "fa_icon": "fas fa-line-height",
                    "description": "Specify the mass range in Dalton that peptides should fulfill to be considered for peptide spectrum matching."
                },
                "prec_charge": {
                    "type": "string",
                    "fa_icon": "fas fa-bolt",
                    "description": "Specify the precursor charge range that peptides should fulfill to be considered for peptide spectrum matching."
                },
                "precursor_mass_tolerance": {
                    "type": "integer",
                    "fa_icon": "fas fa-think-peaks",
                    "default": 5,
                    "description": "Specify the precursor mass tolerance to be used for the Comet database search.",
                    "help_text": "For high-resolution instruments a precursor mass tolerance value of 5ppm is recommended. (eg. 5)"
                },
                "precursor_error_units": {
                    "type": "string",
                    "fa_icon": "fas fa-think-peaks",
                    "default": "ppm",
                    "enum": ["ppm", "Da", "amu"],
                    "description": "Specify the unit of the precursor mass tolerance to be used for the Comet database search."
                },
                "fragment_bin_offset": {
                    "type": "number",
                    "fa_icon": "fas fa-pipe",
                    "default": 0.0,
                    "hidden": true,
                    "description": "Specify the fragment bin offset to be used for the comet database search.",
                    "help_text": "For high-resolution instruments a fragment bin offset of 0 is recommended. (See the Comet parameter documentation: https://uwpr.github.io/Comet/parameters/parameters_202401/).\n This parameter needs to be combined with `fragment_bin_tol` parameter"
                },
                "fragment_mass_tolerance": {
                    "type": "number",
                    "default": 0.01,
                    "fa_icon": "fas fa-pipe",
                    "description": "Specify the fragment mass tolerance to be used for the comet database search.",
                    "help_text": "For high-resolution instruments a fragment mass tolerance value of 0.02 is recommended\n(See the Comet parameter documentation: https://uwpr.github.io/Comet/parameters/parameters_202401/).\nThe OpenCometAdapter mulitplies this parameter with 2 to align with other search engines."
                },
                "number_mods": {
                    "type": "integer",
                    "fa_icon": "fas fa-hashtag",
                    "default": 3,
                    "description": "Specify the maximum number of modifications that should be contained in a peptide sequence match."
                },
                "fixed_mods": {
                    "type": "string",
                    "fa_icon": "fas fa-cubes-stacked",
                    "description": "Specify which fixed modifications should be applied to the database search",
                    "help_text": "e.g. 'Carbamidomethyl (C)' (see OpenMS modifications; for a list of options, see parameter description on https://abibuilder.informatik.uni-tuebingen.de/archive/openms/Documentation/nightly/html/TOPP_CometAdapter.html).\nMultiple modifications can be specified by separating commas:`Oxidation (M),Carbamidomethyl (C)`"
                },
                "variable_mods": {
                    "type": "string",
                    "fa_icon": "fas fa-cubes-stacked",
                    "default": "Oxidation (M)",
                    "description": "Specify which variable modifications should be applied to the database search",
                    "help_text": "e.g. 'Oxidation (M)' (see OpenMS modifications; for a list of options, see parameter description on https://abibuilder.informatik.uni-tuebingen.de/archive/openms/Documentation/nightly/html/TOPP_CometAdapter.html).\nMultiple modifications can be specified by separating commas:`Oxidation (M),Carbamidomethyl (C)`"
                },
                "num_hits": {
                    "type": "integer",
                    "fa_icon": "fas fa-hashtag",
                    "default": 1,
                    "description": "Specify the number of hits that should be reported for each spectrum."
                },
                "use_x_ions": {
                    "type": "boolean",
                    "fa_icon": "fas fa-wave-sine",
                    "description": "Include x ions into the peptide spectrum matching"
                },
                "use_z_ions": {
                    "type": "boolean",
                    "fa_icon": "fas fa-wave-sine",
                    "description": "Include z ions into the peptide spectrum matching"
                },
                "use_a_ions": {
                    "type": "boolean",
                    "fa_icon": "fas fa-wave-sine",
                    "description": "Include a ions into the peptide spectrum matching"
                },
                "use_c_ions": {
                    "type": "boolean",
                    "fa_icon": "fas fa-wave-sine",
                    "description": "Include c ions into the peptide spectrum matching"
                },
                "use_NL_ions": {
                    "type": "boolean",
                    "fa_icon": "fas fa-wave-sine",
                    "description": "Include NL ions into the peptide spectrum matching"
                },
                "remove_precursor_peak": {
                    "type": "boolean",
                    "fa_icon": "fas fa-pipe",
                    "description": "Include if you want to remove all peaks around precursor m/z",
                    "default": false
                },
                "spectrum_batch_size": {
                    "type": "integer",
                    "fa_icon": "fas fa-truck-fast",
                    "default": 0,
                    "hidden": true,
                    "description": "Size of Spectrum batch for Comet processing (Decrease/Increase depending on Memory Availability)"
                },
                "default_params_file_comet": {
                    "type": "string",
                    "fa_icon": "fas fa-file-code",
                    "hidden": true,
                    "description": "Specify custom Comet params file. All parameters of this take precedence."
                }
            }
        },
        "rescoring_settings": {
            "title": "Rescoring settings",
            "type": "object",
            "fa_icon": "fas fa-star-half-stroke",
            "description": "",
            "default": "",
            "properties": {
                "rescoring_engine": {
                    "type": "string",
                    "fa_icon": "fas fa-wrench",
                    "default": "percolator",
                    "description": "Specify the rescoring engine that should be used for rescoring. Either percolator or mokapot",
                    "enum": ["percolator", "mokapot"]
                },
                "feature_generators": {
                    "type": "string",
                    "fa_icon": "fas fa-head-side-gear",
                    "default": "deeplc,ms2pip",
                    "description": "Specify the feature generator that should be used for rescoring. One or multiple of basic,ms2pip,deeplc,ionmob"
                },
                "ms2pip_model": {
                    "type": "string",
                    "fa_icon": "fas fa-head-side-gear",
                    "default": "Immuno-HCD",
                    "enum": [
                        "Immuno-HCD",
                        "timsTOF",
                        "timsTOF2023",
                        "CID",
                        "CIDch2",
                        "CID-TMT",
                        "TMT",
                        "HCD",
                        "HCDch2",
                        "TTOF5600",
                        "iTRAQ",
                        "iTRAQphospho"
                    ],
                    "description": "Specify the MS²PIP model that should be used for rescoring. Checkout the MS²PIP documentation for available models."
                },
                "ms2pip_model_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "fa_icon": "fas fa-file-code",
                    "hidden": true,
                    "description": "Specify a local directory holding at least the MS²PIP models specified in `ms2pip_model`."
                },
                "deeplc_calibration_set_size": {
                    "type": "number",
                    "fa_icon": "fas fa-head-side-gear",
                    "hidden": true,
                    "default": 0.15,
                    "description": "Specify the number or percentage of PSMs that should be used for calibration of the DeepLC model."
                },
                "fdr_level": {
                    "type": "string",
                    "fa_icon": "fas fa-rectangle-code",
                    "default": "peptide_level_fdrs",
                    "description": "Specify the level at which the false discovery rate should be computed.",
                    "enum": ["peptide_level_fdrs", "psm_level_fdrs", "protein_level_fdrs"]
                },
                "fdr_threshold": {
                    "type": "number",
                    "fa_icon": "fas fa-less-than",
                    "default": 0.01,
                    "description": "Specify the false discovery rate threshold at which peptide hits should be selected."
                },
                "global_fdr": {
                    "type": "boolean",
                    "default": false,
                    "fa_icon": "fas fa-less-than",
                    "description": "Compute global FDR and backfilter sample-specific FDRs"
                },

                "subset_max_train": {
                    "type": "integer",
                    "hidden": true,
                    "default": 0,
                    "fa_icon": "fas fa-train-track",
                    "description": "Maximum subset for Percolator training iterations"
                }
            }
        },
        "quantification_options": {
            "title": "Quantification Options",
            "type": "object",
            "fa_icon": "fas fa-tally",
            "description": "",
            "default": "",
            "properties": {
                "quantify": {
                    "type": "boolean",
                    "default": false,
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Turn on quantification mode"
                },
                "max_rt_alignment_shift": {
                    "type": "integer",
                    "fa_icon": "fas fa-align-center",
                    "default": 300,
                    "description": "Set a maximum retention time shift for the linear RT alignment"
                },
                "quantification_fdr": {
                    "type": "boolean",
                    "hidden": true,
                    "fa_icon": "fas fa-less-than",
                    "description": "Compute FDR for the targeted approach",
                    "help_text": "(Weisser H. and Choudhary J.S. J Proteome Res. 2017 Aug 4)"
                },
                "quantification_min_prob": {
                    "type": "number",
                    "hidden": true,
                    "default": 0,
                    "description": "Specify a cut off probability value for quantification events as a filter"
                },
                "quantification_mz_window": {
                    "type": "number",
                    "hidden": true,
                    "default": 5,
                    "description": "Specify a m/z window for matching between runs"
                },
                "quantification_rt_window": {
                    "type": "number",
                    "hidden": true,
                    "default": 0,
                    "description": "Specify a rt window for matching between runs"
                },
                "quantification_mapping_tolerance": {
                    "type": "number",
                    "hidden": true,
                    "default": 0,
                    "description": "Specify a rt mapping tolerance for mapping features between runs"
                },
                "quantification_peak_width": {
                    "type": "number",
                    "hidden": true,
                    "default": 60,
                    "description": "Specify a peak width for feature extraction"
                },
                "quantification_min_peak_width": {
                    "type": "number",
                    "hidden": true,
                    "default": 0.2,
                    "description": "Specify a minimum peak width for quantification"
                }
            }
        },
        "post_processing": {
            "title": "Post Processing",
            "type": "object",
            "fa_icon": "fas fa-waveform-lines",
            "description": "",
            "default": "",
            "properties": {
                "peptide_min_length": {
                    "type": "integer",
                    "fa_icon": "fas fa-filter",
                    "default": 8,
                    "description": "Specify the minimum length of peptides to be considered after processing"
                },
                "peptide_max_length": {
                    "type": "integer",
                    "fa_icon": "fas fa-filter",
                    "default": 12,
                    "description": "Specify the maximum length of peptides to be considered after processing"
                },
                "annotate_ions": {
                    "type": "boolean",
                    "default": false,
                    "fa_icon": "fas fa-tags",
                    "description": "Create tsv files containing information about the MS2 ion annotations after processing.",
                    "help_text": "The resulting tsv files should aid in spectrum validation downstream analyses"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/database_options"
        },
        {
            "$ref": "#/$defs/preprocessing"
        },
        {
            "$ref": "#/$defs/search_settings"
        },
        {
            "$ref": "#/$defs/rescoring_settings"
        },
        {
            "$ref": "#/$defs/quantification_options"
        },
        {
            "$ref": "#/$defs/post_processing"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
